{"version":3,"sources":["hooks/HttpHook.js","context/authContext.js","compoments/EditModal.js","compoments/Loader.js","compoments/AnimalsList.js","pages/AnimalsPage/AnimalsPage.js","hooks/messageHook.js","pages/CreatePage/CreatePage.js","pages/SignInPage/SignInPage.js","pages/SignUpPage/SignUpPage.js","pages/ForgotPasswordPage/ForgotPasswordPage.js","pages/ResetPasswordPage/ResetPasswordPage.js","hooks/authHook.js","compoments/Navbar.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuth","EditModal","setIsOpen","isOpen","selectedAnimal","fetchAnimals","searchText","form","setForm","changeHandler","event","target","name","value","useContext","useEffect","fetchUpdate","animalId","Authorization","updateAnimalHandler","document","querySelector","checkValidity","tabIndex","show","getOpenState","e","centered","className","color","onClick","noValidate","onChange","label","required","type","validation","invalid","age","toString","min","max","_id","Loader","AnimalsLinks","animals","selectedAnimals","setSelectedAnimals","setSelectedAnimal","centredModal","setCentredModal","deleteAnimalHandler","hover","scope","map","animal","index","aria-label","isExist","find","id","filter","selectAnimalsHandler","editAnimalHandler","style","marginRight","fontSize","AnimalsPage","setAnimals","setSearchText","fetchBulkDelete","join","fetched","bulkDeleteHandler","size","text","placeholder","useMessage","console","log","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","info","CreatePage","history","useHistory","createAnimalHandler","preventDefault","isValid","push","onSubmit","SignInPage","auth","email","password","signInHandler","minLength","to","SignUpPage","signUpHandler","minlength","ForgotPasswordPage","forgotPasswordHandler","ResetPasswordPage","useParams","changePasswordHandler","storageName","Navbar","flag","showNavRight","setShowNavRight","logoutHandler","expand","light","bgColor","fluid","src","height","alt","data-target","aria-controls","aria-expanded","icon","fas","navbar","right","fullWidth","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd77d20e.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setLoading(true);\n      try {\n        if (body) {\n          body = JSON.stringify(body);\n          headers[\"Content-Type\"] = \"application/json\";\n        }\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n\n        if (!response.ok) throw new Error(data.message);\n        setLoading(false);\n\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n  return { loading, request, error, clearError };\n};\n","import { createContext } from \"react\";\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n  token: null,\n  userId: null,\n  login: noop,\n  logout: noop,\n  isAuth: false,\n});\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useHttp } from \"../hooks/HttpHook\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBInput,\n  MDBValidation,\n} from \"mdb-react-ui-kit\";\nimport { AuthContext } from \"../context/authContext\";\n\nexport const EditModal = ({\n  setIsOpen,\n  isOpen,\n  selectedAnimal,\n  fetchAnimals,\n  searchText,\n}) => {\n  const [form, setForm] = useState(null);\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n  const { request } = useHttp();\n  const { token } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (selectedAnimal) {\n      setForm(selectedAnimal);\n    }\n  }, [selectedAnimal]);\n\n  const fetchUpdate = useCallback(\n    async (animalId) => {\n      try {\n        const data = await request(\n          `/api/animals/${animalId}`,\n          \"PATCH\",\n          { ...form },\n          { Authorization: `Bearer ${token}` }\n        );\n        return data;\n      } catch (e) {}\n    },\n    [token, request, form]\n  );\n\n  const updateAnimalHandler = async (animalId) => {\n    const isValid = document.querySelector(\".needs-validation\").checkValidity();\n    if (isValid) {\n      setIsOpen(false);\n      await fetchUpdate(animalId);\n      fetchAnimals(searchText);\n    }\n  };\n\n  return (\n    <>\n      {form && (\n        <MDBModal\n          tabIndex=\"-1\"\n          show={isOpen}\n          getOpenState={(e) => setIsOpen(e)}\n        >\n          <MDBModalDialog centered>\n            <MDBModalContent>\n              <MDBModalHeader>\n                <MDBModalTitle>Edit {selectedAnimal.name}</MDBModalTitle>\n                <MDBBtn\n                  className=\"btn-close\"\n                  color=\"none\"\n                  onClick={() => setIsOpen(!isOpen)}\n                ></MDBBtn>\n              </MDBModalHeader>\n\n              <MDBModalBody>\n                <MDBValidation noValidate className=\"row g-3\">\n                  <div>\n                    <MDBInput\n                      onChange={changeHandler}\n                      className=\"mb-4\"\n                      value={form.name}\n                      label=\"name\"\n                      required\n                      type=\"text\"\n                      name=\"name\"\n                      validation=\"Please provide a valid pet's name.\"\n                      invalid\n                    />\n                  </div>\n\n                  <div>\n                    <MDBInput\n                      onChange={changeHandler}\n                      className=\"mb-4\"\n                      value={form.type}\n                      label=\"type\"\n                      required\n                      type=\"text\"\n                      name=\"type\"\n                      validation=\"Please provide a valid pet's type.\"\n                      invalid\n                    />\n                  </div>\n                  <div>\n                    <MDBInput\n                      onChange={changeHandler}\n                      value={form.age.toString()}\n                      label=\"age\"\n                      required\n                      type=\"number\"\n                      name=\"age\"\n                      min=\"1\"\n                      max=\"99\"\n                      validation=\"Please provide a valid pet's age.\"\n                      invalid\n                    />\n                  </div>\n                </MDBValidation>\n              </MDBModalBody>\n              <MDBModalFooter>\n                <MDBBtn color=\"secondary\" onClick={() => setIsOpen(!isOpen)}>\n                  Close\n                </MDBBtn>\n                <MDBBtn onClick={() => updateAnimalHandler(selectedAnimal._id)}>\n                  Save changes\n                </MDBBtn>\n              </MDBModalFooter>\n            </MDBModalContent>\n          </MDBModalDialog>\n        </MDBModal>\n      )}\n    </>\n  );\n};\n","import { MDBSpinner } from \"mdb-react-ui-kit\";\n\nexport const Loader = () => (\n  <MDBSpinner color=\"primary\" className=\"loader\">\n    <span className=\"visually-hidden\">Loading...</span>\n  </MDBSpinner>\n);\n","import React, { useContext, useState } from \"react\";\nimport { useHttp } from \"../hooks/HttpHook\";\nimport { AuthContext } from \"../context/authContext\";\nimport {\n  MDBTable,\n  MDBTableHead,\n  MDBTableBody,\n  MDBCheckbox,\n} from \"mdb-react-ui-kit\";\nimport { EditModal } from \"../compoments/EditModal.js\";\nimport { Loader } from \"./Loader\";\n\nexport const AnimalsLinks = ({\n  animals,\n  fetchAnimals,\n  selectedAnimals,\n  setSelectedAnimals,\n  searchText,\n}) => {\n  const [selectedAnimal, setSelectedAnimal] = useState(null);\n  const [centredModal, setCentredModal] = useState(false);\n  const { token } = useContext(AuthContext);\n  const { request, loading } = useHttp();\n\n  const editAnimalHandler = (animal) => {\n    setSelectedAnimal(animal);\n    setCentredModal(!centredModal);\n  };\n\n  const selectAnimalsHandler = (_id) => {\n    const isExist = !!selectedAnimals.find((id) => _id === id);\n    if (isExist) {\n      setSelectedAnimals(selectedAnimals.filter((id) => id !== _id));\n    } else {\n      setSelectedAnimals([...selectedAnimals, _id]);\n    }\n  };\n\n  const deleteAnimalHandler = async (animalId) => {\n    try {\n      await request(`/api/animals/${animalId}`, \"DELETE\", null, {\n        Authorization: `Bearer ${token}`,\n      });\n    } catch (e) {}\n    fetchAnimals();\n  };\n\n  if (loading) return <Loader />;\n\n  return (\n    <>\n      <MDBTable hover>\n        <MDBTableHead>\n          <tr>\n            <th scope=\"col\"> </th>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Type</th>\n            <th scope=\"col\">Age</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </MDBTableHead>\n        <MDBTableBody>\n          {animals.map((animal, index) => {\n            return (\n              <tr key={animal._id}>\n                <th>\n                  <MDBCheckbox\n                    name=\"checkNoLabel\"\n                    value=\"\"\n                    aria-label=\"...\"\n                    onChange={() => {\n                      selectAnimalsHandler(animal._id);\n                    }}\n                  />\n                </th>\n                <th>{index + 1}</th>\n                <td>{animal.name}</td>\n                <td>{animal.type}</td>\n                <td>{animal.age}</td>\n                <td>\n                  <i\n                    onClick={() => editAnimalHandler(animal)}\n                    className=\"fas fa-edit\"\n                    style={{ marginRight: \"10px\", fontSize: \"20px\" }}\n                  ></i>\n                  <i\n                    onClick={() => deleteAnimalHandler(animal._id)}\n                    className=\"fas fa-trash \"\n                    style={{ marginRight: \"10px\", fontSize: \"20px\" }}\n                  ></i>\n                </td>\n              </tr>\n            );\n          })}\n        </MDBTableBody>\n      </MDBTable>\n\n      <EditModal\n        isOpen={centredModal}\n        setIsOpen={setCentredModal}\n        selectedAnimal={selectedAnimal}\n        fetchAnimals={fetchAnimals}\n        searchText={searchText}\n      />\n    </>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdb-react-ui-kit\";\nimport { AnimalsLinks } from \"../../compoments/AnimalsList\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useHttp } from \"../../hooks/HttpHook\";\n\nexport const AnimalsPage = () => {\n  const [animals, setAnimals] = useState([]);\n  const [selectedAnimals, setSelectedAnimals] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const { request } = useHttp();\n  const { token } = useContext(AuthContext);\n\n  const fetchBulkDelete = useCallback(async () => {\n    try {\n      await request(\n        `/api/animals?ids=${selectedAnimals.join(\",\")}`,\n        \"DELETE\",\n        null,\n        { Authorization: `Bearer ${token}` }\n      );\n    } catch (e) {}\n  }, [token, request, selectedAnimals]);\n\n  const fetchAnimals = useCallback(\n    async (searchText = \"\") => {\n      try {\n        const fetched = await request(\n          `/api/animals?searchText=${searchText}`,\n          \"GET\",\n          null,\n          { Authorization: `Bearer ${token}` }\n        );\n        setAnimals(fetched);\n      } catch (e) {}\n    },\n    [token, request]\n  );\n\n  useEffect(() => {\n    fetchAnimals();\n  }, [fetchAnimals]);\n\n  const searchHandler = (event) => {\n    const text = event.target.value;\n    setSearchText(text);\n    fetchAnimals(text);\n  };\n\n  const bulkDeleteHandler = async () => {\n    await fetchBulkDelete();\n    fetchAnimals();\n  };\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow className=\"mb-4 mt-4\">\n          <MDBCol size=\"2\">\n            <MDBBtn onClick={() => bulkDeleteHandler()}>Delete</MDBBtn>\n          </MDBCol>\n          <MDBCol size=\"2\"></MDBCol>\n          <MDBCol size=\"4\">\n            <input\n              onChange={searchHandler}\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search pets\"\n              aria-label=\"Search\"\n            />\n          </MDBCol>\n        </MDBRow>\n\n        <AnimalsLinks\n          animals={animals}\n          fetchAnimals={fetchAnimals}\n          selectedAnimals={selectedAnimals}\n          setSelectedAnimals={setSelectedAnimals}\n          searchText={searchText}\n        />\n      </MDBContainer>\n    </>\n  );\n};\n","import { useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\n\nexport const useMessage = () => {\n  return useCallback((text, type = \"error\") => {\n    console.log(text);\n    if (text && type === \"error\") {\n      toast.error(`${text}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    if (text && type === \"info\") {\n      toast.info(`${text}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }, []);\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBValidation,\n} from \"mdb-react-ui-kit\";\nimport { useHttp } from \"../../hooks/HttpHook\";\nimport { useMessage } from \"../../hooks/messageHook\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useHistory } from \"react-router\";\nimport \"./CreatePage.css\";\n\nexport const CreatePage = () => {\n  const message = useMessage();\n  const history = useHistory();\n  const { token } = useContext(AuthContext);\n  const { request, error, clearError } = useHttp();\n  const [form, setForm] = useState({\n    name: \"\",\n    age: 0,\n    type: \"\",\n  });\n\n  const createAnimalHandler = async (event) => {\n    event.preventDefault();\n    const isValid = document.querySelector(\".needs-validation\").checkValidity();\n\n    try {\n      if (isValid) {\n        await request(\n          `/api/animals/`,\n          \"POST\",\n          { ...form },\n          { Authorization: `Bearer ${token}` }\n        );\n        history.push(\"/\");\n      }\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <>\n      <MDBContainer className=\"d-flex h-50 justify-content-center\">\n        <MDBRow className=\"justify-content-center align-self-center \">\n          <h2 className=\"text-center\">Add animal</h2>\n          <MDBValidation\n            noValidate\n            className=\"row g-3 create-form\"\n            onSubmit={createAnimalHandler}\n          >\n            <div>\n              <MDBInput\n                label=\"Animal name\"\n                id=\"name\"\n                required\n                type=\"text\"\n                name=\"name\"\n                onChange={changeHandler}\n                validation=\"Please provide a valid pet's name.\"\n                invalid\n              />\n            </div>\n\n            <div>\n              <MDBInput\n                label=\"Kind of animal\"\n                id=\"type\"\n                required\n                type=\"text\"\n                name=\"type\"\n                onChange={changeHandler}\n                validation=\"Please provide a valid pet's kind.\"\n                invalid\n              />\n            </div>\n\n            <div>\n              <MDBCol size=\"12\">\n                <MDBInput\n                  label=\"Age of animal\"\n                  id=\"age\"\n                  required\n                  type=\"number\"\n                  name=\"age\"\n                  onChange={changeHandler}\n                  min=\"1\"\n                  max=\"99\"\n                  validation=\"Please provide a valid pet's age.\"\n                  invalid\n                />\n              </MDBCol>\n            </div>\n            <div>\n              <MDBBtn type=\"submit\">Submit</MDBBtn>\n            </div>\n          </MDBValidation>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBInput,\n  MDBBtn,\n  MDBValidation,\n} from \"mdb-react-ui-kit\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./SignIn.css\";\nimport { useHttp } from \"../../hooks/HttpHook\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMessage } from \"../../hooks/messageHook\";\n\nexport const SignInPage = () => {\n  const auth = useContext(AuthContext);\n  const message = useMessage();\n  const { request, error, clearError } = useHttp();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    console.log(error);\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const signInHandler = async (event) => {\n    event.preventDefault();\n    const isValid = document.querySelector(\".needs-validation\").checkValidity();\n\n    try {\n      if (isValid) {\n        const data = await request(\"/api/auth/signin\", \"POST\", { ...form });\n        auth.login(data.token, data.userId);\n      }\n    } catch (e) {}\n  };\n\n  return (\n    <MDBContainer className=\"d-flex h-50 justify-content-center\">\n      <MDBRow className=\"justify-content-center align-self-center \">\n        <h2 className=\"text-center\">Sign in</h2>\n        <MDBValidation\n          noValidate\n          className=\"row g-3 sign-in-form\"\n          onSubmit={signInHandler}\n        >\n          <div>\n            <MDBInput\n              label=\"Type your email\"\n              id=\"email\"\n              required\n              type=\"email\"\n              name=\"email\"\n              onChange={changeHandler}\n              validation=\"Please provide a valid email.\"\n              invalid\n            />\n          </div>\n\n          <div>\n            <MDBInput\n              label=\"Type your password\"\n              id=\"password\"\n              required\n              type=\"password\"\n              name=\"password\"\n              onChange={changeHandler}\n              minLength=\"5\"\n              validation=\"Password must contain at least 5 characters.\"\n              invalid\n            />\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <MDBBtn type=\"submit\">Sign In</MDBBtn>\n            <NavLink to=\"/forgot\">Forgot password?</NavLink>\n          </div>\n        </MDBValidation>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBInput,\n  MDBBtn,\n  MDBValidation,\n} from \"mdb-react-ui-kit\";\nimport { useHistory } from \"react-router\";\n\nimport \"./SignUp.css\";\nimport { useHttp } from \"../../hooks/HttpHook\";\nimport { useMessage } from \"../../hooks/messageHook\";\n\nexport const SignUpPage = () => {\n  const history = useHistory();\n  const message = useMessage();\n  const { request, error, clearError } = useHttp();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const signUpHandler = async (event) => {\n    event.preventDefault();\n    const isValid = document.querySelector(\".needs-validation\").checkValidity();\n\n    try {\n      if (isValid) {\n        await request(\"/api/auth/signup\", \"POST\", { ...form });\n        history.push(\"/signin\");\n        message(\n          \"An email has been sent to your mail with a link to activate your account\",\n          \"info\"\n        );\n      }\n    } catch (e) {}\n  };\n\n  return (\n    <MDBContainer className=\"d-flex h-50 justify-content-center\">\n      <MDBRow className=\"justify-content-center align-self-center \">\n        <h2 className=\"text-center\">Sign up</h2>\n        <MDBValidation\n          noValidate\n          className=\"row g-3 sign-up-form \"\n          onSubmit={signUpHandler}\n        >\n          <div>\n            <MDBInput\n              label=\"Type your email\"\n              id=\"email\"\n              required\n              type=\"email\"\n              name=\"email\"\n              onChange={changeHandler}\n              validation=\"Please provide a valid email.\"\n              invalid\n            />\n          </div>\n\n          <div>\n            <MDBInput\n              label=\"Type your password\"\n              id=\"password\"\n              required\n              minlength=\"5\"\n              type=\"password\"\n              name=\"password\"\n              onChange={changeHandler}\n              validation=\"Password must contain at least 5 characters.\"\n              invalid\n            />\n          </div>\n          <div>\n            <MDBBtn type=\"submit\">Sign Up</MDBBtn>\n          </div>\n        </MDBValidation>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBInput,\n  MDBBtn,\n  MDBValidation,\n} from \"mdb-react-ui-kit\";\nimport { useHttp } from \"../../hooks/HttpHook\";\nimport { useMessage } from \"../../hooks/messageHook\";\nimport \"./ForgotPasswordPage.css\";\n\nexport const ForgotPasswordPage = () => {\n  const message = useMessage();\n  const { request, error, clearError } = useHttp();\n  const [form, setForm] = useState({\n    email: \"\",\n  });\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const forgotPasswordHandler = async (event) => {\n    event.preventDefault();\n    const isValid = document.querySelector(\".needs-validation\").checkValidity();\n\n    try {\n      if (isValid) {\n        await request(\"/api/auth/forgot\", \"POST\", { ...form });\n        message(\n          \"An email has been sent to your mail with a link to reset your password\",\n          \"info\"\n        );\n      }\n    } catch (e) {}\n  };\n  return (\n    <MDBContainer className=\"d-flex h-50 justify-content-center\">\n      <MDBRow className=\"justify-content-center align-self-center \">\n        <h2 className=\"text-center\">FORGOT YOUR PASSWORD?</h2>\n        <MDBValidation\n          noValidate\n          className=\"row g-3 forgot-from\"\n          onSubmit={forgotPasswordHandler}\n        >\n          <div>\n            <MDBInput\n              label=\"Enter your email address\"\n              id=\"email\"\n              required\n              type=\"email\"\n              name=\"email\"\n              className=\"mb-2\"\n              onChange={changeHandler}\n              validation=\"Please provide a valid email.\"\n              invalid\n            />\n          </div>\n          <div>\n            <MDBBtn type=\"submit\">Submit</MDBBtn>\n          </div>\n        </MDBValidation>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBInput,\n  MDBBtn,\n  MDBValidation,\n} from \"mdb-react-ui-kit\";\nimport { useHttp } from \"../../hooks/HttpHook\";\nimport { useMessage } from \"../../hooks/messageHook\";\nimport { useParams } from \"react-router-dom\";\n\nexport const ResetPasswordPage = () => {\n  const history = useHistory();\n  const message = useMessage();\n  const { token } = useParams();\n  const { request, error, clearError } = useHttp();\n  const [form, setForm] = useState({\n    email: \"\",\n  });\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const changePasswordHandler = async (event) => {\n    event.preventDefault();\n    const isValid = document.querySelector(\".needs-validation\").checkValidity();\n\n    try {\n      if (isValid) {\n        console.log(\"LOLKEK\");\n        console.log(token);\n        await request(`/api/auth/reset/${token}`, \"POST\", { ...form });\n        history.push(\"/signin\");\n        message(\"Password changed successfully\", \"info\");\n      }\n    } catch (e) {}\n  };\n\n  return (\n    <MDBContainer className=\"d-flex h-50 justify-content-center\">\n      <MDBRow className=\"justify-content-center align-self-center \">\n        <h2 className=\"text-center\">Set new password</h2>\n        <MDBValidation\n          noValidate\n          className=\"row g-3 forgot-from\"\n          onSubmit={changePasswordHandler}\n        >\n          <div>\n            <MDBInput\n              label=\"Type your new password\"\n              id=\"email\"\n              required\n              type=\"password\"\n              name=\"password\"\n              className=\"mb-2\"\n              onChange={changeHandler}\n              minLength=\"5\"\n              validation=\"Password must contain at least 5 characters.\"\n              invalid\n            />\n          </div>\n          <div>\n            <MDBBtn type=\"submit\">Submit</MDBBtn>\n          </div>\n        </MDBValidation>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageName = \"userData\";\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n\n    localStorage.setItem(\n      storageName,\n      JSON.stringify({\n        userId: id,\n        token: jwtToken,\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n  }, [login]);\n\n  return { login, logout, token, userId };\n};\n","import React, { useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  MDBNavbar,\n  MDBContainer,\n  MDBIcon,\n  MDBNavbarNav,\n  MDBNavbarItem,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavbarBrand,\n} from \"mdb-react-ui-kit\";\nimport { AuthContext } from \"../context/authContext\";\n\nexport const Navbar = () => {\n  const [showNavRight, setShowNavRight] = useState(false);\n  const auth = useContext(AuthContext);\n\n  const logoutHandler = (event) => {\n    event.preventDefault();\n    auth.logout();\n  };\n\n  const Links = (flag) => {\n    if (flag) {\n      return (\n        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\n          <MDBNavbarItem>\n            <NavLink to=\"/\" className=\"m-2 text-dark\">\n              Home\n            </NavLink>\n          </MDBNavbarItem>\n          <MDBNavbarItem>\n            <NavLink to=\"/create\" className=\"m-2 text-dark\">\n              Add\n            </NavLink>\n          </MDBNavbarItem>\n          <MDBNavbarItem>\n            <NavLink to=\"\" className=\"m-2 text-dark\" onClick={logoutHandler}>\n              Logout\n            </NavLink>\n          </MDBNavbarItem>\n        </MDBNavbarNav>\n      );\n    } else {\n      return (\n        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\n          <MDBNavbarItem>\n            <NavLink to=\"/signin\" className=\"m-2 text-dark\">\n              Login\n            </NavLink>\n          </MDBNavbarItem>\n          <MDBNavbarItem>\n            <NavLink to=\"/signup\" className=\"m-2 text-dark\">\n              Register\n            </NavLink>\n          </MDBNavbarItem>\n        </MDBNavbarNav>\n      );\n    }\n  };\n\n  return (\n    <MDBNavbar expand=\"lg\" light bgColor=\"light\" className=\"ps-4 pe-4\">\n      <MDBContainer fluid>\n        <NavLink to=\"/\" className=\"navbar-brand\">\n          <img\n            src=\"https://mdbcdn.b-cdn.net/img/logo/mdb-transaprent-noshadows.png\"\n            height=\"30\"\n            alt=\"\"\n            loading=\"lazy\"\n          />\n          Animals DataBase\n        </NavLink>\n\n        <MDBNavbarToggler\n          type=\"button\"\n          data-target=\"#navbarRightAlignExample\"\n          aria-controls=\"navbarRightAlignExample\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={() => setShowNavRight(!showNavRight)}\n        >\n          <MDBIcon icon=\"bars\" fas />\n        </MDBNavbarToggler>\n\n        <MDBCollapse navbar show={showNavRight}>\n          {Links(auth.isAuth)}\n        </MDBCollapse>\n      </MDBContainer>\n    </MDBNavbar>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useRoutes } from \"./routes\";\nimport { AuthContext } from \"./context/authContext\";\nimport { useAuth } from \"./hooks/authHook\";\nimport { Navbar } from \"./compoments/Navbar\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  const isAuth = !!token;\n  const routes = useRoutes(isAuth);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        login,\n        logout,\n        userId,\n        isAuth,\n      }}\n    >\n      <ToastContainer />\n      <BrowserRouter>\n        <header>\n          <Navbar />\n        </header>\n        <main>{routes}</main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { AnimalsPage } from \"./pages/AnimalsPage/AnimalsPage\";\nimport { CreatePage } from \"./pages/CreatePage/CreatePage\";\nimport { SignInPage } from \"./pages/SignInPage/SignInPage\";\nimport { SignUpPage } from \"./pages/SignUpPage/SignUpPage\";\nimport { ForgotPasswordPage } from \"./pages/ForgotPasswordPage/ForgotPasswordPage\";\nimport { ResetPasswordPage } from \"./pages/ResetPasswordPage/ResetPasswordPage\";\n\nexport const useRoutes = (isAuth) => {\n  if (isAuth) {\n    return (\n      <Switch>\n        <Route path=\"/\" exact>\n          <AnimalsPage />\n        </Route>\n        <Route path=\"/create\" exact>\n          <CreatePage />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/signin\" exact>\n        <SignInPage />\n      </Route>\n      <Route path=\"/signup\" exact>\n        <SignUpPage />\n      </Route>\n      <Route path=\"/forgot\" exact>\n        <ForgotPasswordPage />\n      </Route>\n      <Route path=\"/reset/:token\" exact>\n        <ResetPasswordPage />\n      </Route>\n      <Redirect to=\"/signin\" />\n    </Switch>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}